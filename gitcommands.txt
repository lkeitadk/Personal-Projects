WORKING COPY ----> STAGING AREA ----> COMMITING FILES

- git add . : what this does is that it adds all the changes we have made to the project. By running this command, we go from the "working area" to the "staging area"
	      where files are waiting to be committed.
	      The dot . represents everything in the current folder	

- git commit -m "MESSAGE" : 
		Whenever we make a commit, it's like taking taking a snapshot of what the files were like at that point of time so that we can come back to it in case
		  we mess up.
		-m allows us to put in a message just like a command
		-am : this will allow us to skip the staging area and to commit it directly. However, it will grab EVERYTHING in the working copy, and it is only helpful if 
			we are making simple edits to small files.

- git log --author="NAMEOFAUTHOR" : this allows us to see all the commits that were made by one specific person in the project

- git diff: allows us to compare our version copy to the one in the staging area
- git diff --staged: it will compare the staging area to repository.

-git rm "FILENAME": removes one file

-git checkout -- FILENAME: Replaces the working copy by the version of the file in the repository.

-git remote add NAMEOFREPOSITORY URLOFREPOSITORY.git: add a public project on Github and link it to git

-git push: Add files to the repository.

UNTRACKED FILES are files that Git is not keeping track of. In other words, they are all the files that were not committed yet. 